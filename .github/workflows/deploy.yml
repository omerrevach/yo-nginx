name: Terraform CI/CD

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main

jobs:
  secrets-scan:
    name: Gitleaks Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: zricethezav/gitleaks-action@v2
        with:
          args: "--report-format sarif --report-path=gitleaks.sarif"

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks.sarif

  docker-scan:
    name: Trivy Dockerfile Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Run Trivy and Save Report
        run: trivy config . --format sarif --output trivy-results.sarif || true

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-results.sarif

  checkov:
    name: Checkov Terraform Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov and Save Report
        run: checkov -d ./tf --output sarif > checkov-results.sarif || true

      - name: Upload Checkov Report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: checkov-results.sarif

  # Will only get triggered if all tests are successful
  terraform:
    name: Terraform Plan, Apply and other checks
    needs: [secrets-scan, docker-scan, checkov]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    defaults:
      run:
        working-directory: tf

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format Check
        run: terraform fmt -check -recursive || true

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
